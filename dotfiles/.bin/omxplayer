#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Fake omxplayer using ffplay or pygame.mixer if that fails

# Programmed by CoolCat467

__title__ = 'Fake omxplayer'
__author__ = 'CoolCat467'
__version__ = '1.0.1'
__ver_major__ = 1
__ver_minor__ = 0
__ver_patch__ = 1

import os
import sys
import time

# Hide the pygame prompt
os.environ['PYGAME_HIDE_SUPPORT_PROMPT'] = 'True'

HAS_PYGAME = True
try:
    import pygame.mixer
    from pygame import error as pygame_error
except ImportError:
    HAS_PYGAME = False

REPLACE_CHARS = ''' &()"'[]$'''

def pygame_mixer(filepath: str) -> int:
    "Use pygame.mixer to play sound file and return 0, 1 if failure"
    if not HAS_PYGAME:
        return 1
    def play_sound() -> None:
        music_chan = pygame.mixer.Channel(1)
        sound = pygame.mixer.Sound(filepath)
        music_chan.play(sound)
        try:
            time.sleep(sound.get_length())
        except KeyboardInterrupt:
            pass
##        try:
##            pygame.mixer.music.load(filepath)
##        except pygame_error:
##            return 1
##        pygame.mixer.music.play()
##        try:
##            while pygame.mixer.music.get_busy():
##                time.sleep(1)
##        except KeyboardInterrupt:
##            pass
##        pygame.mixer.music.unload()
    pygame.mixer.init()
    try:
        play_sound()
    finally:
        pygame.mixer.stop()
        pygame.mixer.quit()
    return 0

def replace_term(text: str, reverse: bool=False) -> str:
    "Escape dangerous characters in a given string"
    text = str(text)
    for char in REPLACE_CHARS:
        if reverse:
            text = text.replace('\\'+char, char)
        else:
            text = text.replace(char, '\\'+char)
    return text

def ffplay(filepath: str) -> int:
    "Play sound file with ffplay and return exit code."
    filepath = replace_term(filepath)
    command = f'ffplay -hide_banner -loglevel panic -autoexit -vn -showmode 0 {filepath}'

    return os.system(command)

def run(program: str, *str_args: str) -> int:
    "Run fake omx player"
    args = list(str_args)
    if '-o' in args:
        idx = args.index('-o')
        args = args[:idx]+args[idx+2:]
    if not args:
        return 1
    filepath = args[-1]

    filepath = os.path.abspath(filepath)
    code = ffplay(filepath)
    if code != 0 and HAS_PYGAME:
        return pygame_mixer(filepath)
    return code

if __name__ == '__main__':
    print(run(*sys.argv))
